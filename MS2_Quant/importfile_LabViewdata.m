function labViewdata = importfile_LabViewdata(dataFolder, dataLines)
%IMPORTFILE Import data from a text file
%  PM = IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as a table.
%
%  PM = IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  PM = importfile_LabViewdata("C:\Users\Anand Inside\Desktop\SelfWritten_LaviewVIs\2_3_2020 3_24_25 PM", [14, Inf], 4);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 03-Feb-2020 15:28:55

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [24, Inf];
end

%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 5);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["LabVIEWMeasurement", "VarName2", "VarName3", "VarName4", "VarName5"];
opts.VariableTypes = ["double", "double", "double", "double", "string"];
opts = setvaropts(opts, 5, "WhitespaceRule", "preserve");
opts = setvaropts(opts, 5, "EmptyFieldRule", "auto");
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
%%

nCol=4;
yVoltageRange=2;

if any(size((dir([dataFolder,'*PM'])),1))
dirData=dir([dataFolder,'*PM']);
lmvDatafilename=dirData.name;

%      labViewdata=importfile_LabViewdata([dataFolder, lmvDatafilename], [24, Inf],nCol);
else any(size((dir([dataFolder,'*AM'])),1))
dirData=dir([dataFolder,'*AM']);
lmvDatafilename=dirData.name;

%      labViewdata=importfile_LabViewdata([dataFolder, lmvDatafilename], [24, Inf],nCol);
end


%%
% Import the data
PM = readtable(lmvDatafilename, opts);
PM=PM(:,1:nCol);
PM.Properties.VariableNames = {'Time' 'DEV2AI1 ' 'DEV2AI2' 'DEV2AI3' };

labViewdata=PM;
        save([dataFolder, 'labViewdata.mat'],'labViewdata','-v7.3','-nocompression');

%%%---





%%%------

% Fs = PM{2,1}-PM{1,1};            % Sampling frequency                    
% T = 1/Fs;             % Sampling period       
% L = size(PM,1);             % Length of signal
% % t = (0:L-1)*T;        % Time vector
% 
% % [m,n]=size(PM);
% % for iC=2:n
% % %Compute the Fourier transform of the signal.
% % Y(iC) = fft(PM{:,iC});
% % %Compute the two-sided spectrum P2. Then compute the single-sided spectrum P1 based on P2 and the even-valued signal length L.
% % P2(iC) = abs(Y(iC)/L);
% % P1 = P2(1:L/2+1);
% % P1(2:end-1) = 2*P1(2:end-1);
% % 
% % f = Fs*(0:(L/2))/L;
% % subplot(2,1,2)
% % plot(f,P1) 
% 
% % end
% % title('Single-Sided Amplitude Spectrum of X(t)')
% % xlabel('f (Hz)')
% % ylabel('|P1(f)|')
% 
% % PM.Time=['PM.LabVIEWMeasurement'];
% PM.DMD T = readtable('C:\Users\Anand Inside\Desktop\SelfWritten_LaviewVIs\2_3_2020 3_24_25 PM.txt');
end